package segundaevaluacion;

import java.util.Scanner;

public class EJ013Main {

    public static void main(String[] args) {
        int opcion;
        Scanner sc = new Scanner(System.in);
        System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXX");
        EJ013Biblioteca biblioteca = new EJ013Biblioteca();
        System.out.println("yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy");
        EJ013Libro libro;
        long isbn;

        do {
            System.out.println("1. Insertar un libro");
            System.out.println("2. Eliminar un libro");
            System.out.println("3. Buscar un libro");
            System.out.println("4. Mostrar todos los libros");
            System.out.println("0. Salir de la aplicación");
            System.out.print("Elige opción: ");
            opcion = sc.nextInt();
            sc.nextLine(); //limpiamos el buffer
            switch (opcion) {
                case 1:
// *crear un libro introduciendo toda su información POR TECLADO, es decir, isbn, titulo, dni, nombre,
//apellidos, edad, nacionalidad y número de páginas.
//* Insertar los datos anteriormente tecleados en el libro de modo que habrá que decir SI EL LIBRO SE
// HA INSERTADO CORRECTAMENTE o no en cuyo caso lo normal es que este la
// biblioteca LLENA y no se haya podido meter mas libros.

                    boolean emptyspace = false;
                    int emptyposition = 0;
                    for (int i = 0; i < biblioteca.getCollection().length; i++) {
                        if (biblioteca.getCollection()[i] == null) {
                            emptyspace = true;
                            emptyposition = i;
                        }
                    }
                    if (emptyspace) {
                        biblioteca.getCollection()[emptyposition] = new EJ013Libro(-888);
                    }
                    break;
                case 2:
//* Dado un ISBN (que Habra que leer por teclado), eliminar dicho libro de la biblioteca.
//     Puede suceder de que ese libro no esté con lo cual habría que decir que dicho
//     libro NO SE PUEDE BORRAR PORQUE NO ESTA EN LA BIBLIOTECA.,
                    System.out.println("Dame el isbn del libro a eliminar");
                    isbn = sc.nextLong();
                    for (int i = 0; i < biblioteca.getCollection().length; i++) {
                        if (biblioteca.getCollection()[i].getIsbn() == isbn) {
                            biblioteca.getCollection()[i] = null;
                        }
                    }
                    break;
                case 3:
//* Dado un ISBN (que habrá que leer por teclado), buscar dicho libro de la biblioteca.
//   Puede suceder de que ese libro no esté con lo cual habría que decir
// que dicho libro NO ESTA EN LA BIBLIOTECA.
                    boolean found = false;
                    System.out.println("Dame el ISBN del libro a buscar");
                    isbn = sc.nextLong();
                    for (int i = 0; i < biblioteca.getCollection().length; i++) {
                        if (biblioteca.getCollection()[i].getIsbn() == isbn) {
                            found = true;
                        }
                    }
                    System.out.println("---------------------------------");
                    if (found) {
                        System.out.println("El libro está en la biblioteca");
                    } else {
                        System.out.println("El libro no está en la biblioteca");
                    }
                    System.out.println("-----------------------------------");
                    break;
                case 4:
//* Mostrar todos los libros de la biblioteca

                    biblioteca.booklist();

                    break;
                case 0:
                    System.out.println("Gracias por usar mi biblioteca");
                    break;
                default:
                    System.out.println("Opción incorrecta");
            }

        } while (opcion
                != 0);
    }

}
